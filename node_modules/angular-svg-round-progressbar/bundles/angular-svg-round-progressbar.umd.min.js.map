{"version":3,"sources":["../../../src/lib/round-progress/round-progress.service.ts","../../../src/lib/round-progress/round-progress.config.ts","../../../src/lib/round-progress/round-progress.ease.ts","../../../src/lib/round-progress/round-progress.component.ts","../../../src/lib/round-progress/round-progress.module.ts"],"names":["DEGREE_IN_RADIANS","Math","PI","RoundProgressService","document","this","supportsSvg","createElementNS","createSVGRect","base","head","querySelector","hasPerf","window","performance","now","prototype","resolveColor","color","href","hashIndex","indexOf","slice","location","getTimestamp","Date","getArc","current","total","pathRadius","elementRadius","isSemicircle","value","max","min","maxAngle","percentage","_polarToCartesian","angleInDegrees","angleInRadians","cos","sin","Injectable","args","providedIn","Optional","type","Inject","DOCUMENT","ROUND_PROGRESS_DEFAULTS","InjectionToken","radius","animation","animationDelay","duration","stroke","background","responsive","clockwise","semicircle","rounded","ROUND_PROGRESS_DEFAULTS_PROVIDER","provide","useValue","Éµ0","RoundProgressEase","linearEase","t","b","c","d","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","pow","easeOutExpo","easeInOutExpo","easeInCirc","sqrt","easeOutCirc","easeInOutCirc","easeInElastic","p","s","a","abs","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","RoundProgressComponent","service","easing","defaults","ngZone","onRender","EventEmitter","lastAnimationId","_animateChange","from","to","_this","_clamp","self","changeInValue","runOutsideAngular","start","startTime","id","requestAnimationFrame","currentTime","_setPath","emit","setTimeout","path","arc","nativeElement","setAttribute","getPathTransform","diameter","_getDiameter","ngOnChanges","changes","previousValue","currentValue","_getElementHeight","_getViewBox","_getPaddingBottom","Component","selector","changeDetection","ChangeDetectionStrategy","OnPush","template","host","role","[attr.aria-valuemin]","[attr.aria-valuemax]","[attr.aria-valuenow]","[style.width]","[style.height]","[style.padding-bottom]","[class.responsive]","NgZone","ViewChild","Input","Output","NgModule","declarations","exports","providers"],"mappings":"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","sourcesContent":["import {Injectable, Inject, Optional} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nconst DEGREE_IN_RADIANS: number = Math.PI / 180;\n\n@Injectable({providedIn: 'root'})\nexport class RoundProgressService {\n  private base: HTMLBaseElement;\n  private hasPerf: boolean;\n  public supportsSvg: boolean;\n\n  constructor(@Optional() @Inject(DOCUMENT) document: any) {\n    this.supportsSvg = !!(\n      document &&\n      document.createElementNS &&\n      document.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGRect\n    );\n\n    this.base = document && document.head.querySelector('base');\n    this.hasPerf =\n      typeof window !== 'undefined' &&\n      window.performance &&\n      window.performance.now &&\n      typeof window.performance.now() === 'number';\n  }\n\n  /**\n   * Resolves a SVG color against the page's `base` tag.\n   */\n  resolveColor(color: string): string {\n    if (this.base && this.base.href) {\n      const hashIndex = color.indexOf('#');\n\n      if (hashIndex > -1 && color.indexOf('url') > -1) {\n        return color.slice(0, hashIndex) + location.href + color.slice(hashIndex);\n      }\n    }\n\n    return color;\n  }\n\n  /**\n   * Generates a timestamp.\n   */\n  getTimestamp(): number {\n    return this.hasPerf ? window.performance.now() : Date.now();\n  }\n\n  /**\n   * Generates the value for an SVG arc.\n   * @param current       Current value.\n   * @param total         Maximum value.\n   * @param pathRadius    Radius of the SVG path.\n   * @param elementRadius Radius of the SVG container.\n   * @param isSemicircle  Whether the element should be a semicircle.\n   */\n  getArc(current: number, total: number, pathRadius: number, elementRadius: number, isSemicircle = false): string {\n    const value = Math.max(0, Math.min(current || 0, total));\n    const maxAngle = isSemicircle ? 180 : 359.9999;\n    const percentage = total === 0 ? maxAngle : (value / total) * maxAngle;\n    const start = this._polarToCartesian(elementRadius, pathRadius, percentage);\n    const end = this._polarToCartesian(elementRadius, pathRadius, 0);\n    const arcSweep = percentage <= 180 ? 0 : 1;\n\n    return `M ${start} A ${pathRadius} ${pathRadius} 0 ${arcSweep} 0 ${end}`;\n  }\n\n  /**\n   * Converts polar cooradinates to Cartesian.\n   * @param elementRadius  Radius of the wrapper element.\n   * @param pathRadius     Radius of the path being described.\n   * @param angleInDegrees Degree to be converted.\n   */\n  private _polarToCartesian(elementRadius: number, pathRadius: number, angleInDegrees: number): string {\n    const angleInRadians = (angleInDegrees - 90) * DEGREE_IN_RADIANS;\n    const x = elementRadius + pathRadius * Math.cos(angleInRadians);\n    const y = elementRadius + pathRadius * Math.sin(angleInRadians);\n\n    return x + ' ' + y;\n  }\n}\n","import {InjectionToken, Provider} from '@angular/core';\n\nexport const ROUND_PROGRESS_DEFAULTS =\n    new InjectionToken<RoundProgressDefaults>('ROUND_PROGRESS_DEFAULTS');\n\nexport const ROUND_PROGRESS_DEFAULTS_PROVIDER: Provider = {\n  provide: ROUND_PROGRESS_DEFAULTS,\n  useValue: {\n    radius: 125,\n    animation: 'easeOutCubic',\n    animationDelay: null,\n    duration: 500,\n    stroke: 15,\n    color: '#45CCCE',\n    background: '#EAEAEA',\n    responsive: false,\n    clockwise: true,\n    semicircle: false,\n    rounded: false,\n  },\n};\n\nexport interface RoundProgressDefaults {\n  radius?: number;\n  animation?: string;\n  animationDelay?: number;\n  duration?: number;\n  stroke?: number;\n  color?: string;\n  background?: string;\n  responsive?: boolean;\n  clockwise?: boolean;\n  semicircle?: boolean;\n  rounded?: boolean;\n}\n","/**\n * TERMS OF USE - EASING EQUATIONS\n * Open source under the BSD License.\n *\n * Copyright Â© 2001 Robert Penner\n * All rights reserved.\n * Redistribution and use in source and binary forms, with or without modification, are permitted\n * provided that the following conditions are met:\n *\n * Redistributions of source code must retain the above copyright notice, this list of conditions\n * and the following disclaimer.\n *\n * Redistributions in binary form must reproduce the above copyright notice, this list of conditions\n * and the following disclaimer in the documentation and/or other materials provided with the\n * distribution.\n *\n * Neither the name of the author nor the names of contributors may be used to endorse or promote\n * products derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport {Injectable} from '@angular/core';\n\n@Injectable({providedIn: 'root'})\nexport class RoundProgressEase {\n  // t: current time (or position) of the neonate. This can be seconds or frames, steps,\n  // seconds, ms, whatever â as long as the unit is the same as is used for the total time.\n  // b: beginning value of the property.\n  // c: change between the beginning and destination value of the property.\n  // d: total time of the neonate.\n\n  linearEase(t: number, b: number, c: number, d: number): number {\n    return (c * t) / d + b;\n  }\n\n  easeInQuad(t: number, b: number, c: number, d: number): number {\n    return c * (t /= d) * t + b;\n  }\n\n  easeOutQuad(t: number, b: number, c: number, d: number): number {\n    return -c * (t /= d) * (t - 2) + b;\n  }\n\n  easeInOutQuad(t: number, b: number, c: number, d: number): number {\n    // tslint:disable-next-line:no-conditional-assignment\n    if ((t /= d / 2) < 1) {\n      return (c / 2) * t * t + b;\n    }\n\n    return (-c / 2) * (--t * (t - 2) - 1) + b;\n  }\n\n  easeInCubic(t: number, b: number, c: number, d: number): number {\n    return c * (t /= d) * t * t + b;\n  }\n\n  easeOutCubic(t: number, b: number, c: number, d: number): number {\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  }\n\n  easeInOutCubic(t: number, b: number, c: number, d: number): number {\n    // tslint:disable-next-line:no-conditional-assignment\n    if ((t /= d / 2) < 1) {\n      return (c / 2) * t * t * t + b;\n    }\n\n    return (c / 2) * ((t -= 2) * t * t + 2) + b;\n  }\n\n  easeInQuart(t: number, b: number, c: number, d: number): number {\n    return c * (t /= d) * t * t * t + b;\n  }\n\n  easeOutQuart(t: number, b: number, c: number, d: number): number {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  }\n\n  easeInOutQuart(t: number, b: number, c: number, d: number): number {\n    // tslint:disable-next-line:no-conditional-assignment\n    if ((t /= d / 2) < 1) {\n      return (c / 2) * t * t * t * t + b;\n    }\n\n    return (-c / 2) * ((t -= 2) * t * t * t - 2) + b;\n  }\n\n  easeInQuint(t: number, b: number, c: number, d: number): number {\n    return c * (t /= d) * t * t * t * t + b;\n  }\n\n  easeOutQuint(t: number, b: number, c: number, d: number): number {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  }\n\n  easeInOutQuint(t: number, b: number, c: number, d: number): number {\n    // tslint:disable-next-line:no-conditional-assignment\n    if ((t /= d / 2) < 1) {\n      return (c / 2) * t * t * t * t * t + b;\n    }\n\n    return (c / 2) * ((t -= 2) * t * t * t * t + 2) + b;\n  }\n\n  easeInSine(t: number, b: number, c: number, d: number): number {\n    return -c * Math.cos((t / d) * (Math.PI / 2)) + c + b;\n  }\n\n  easeOutSine(t: number, b: number, c: number, d: number): number {\n    return c * Math.sin((t / d) * (Math.PI / 2)) + b;\n  }\n\n  easeInOutSine(t: number, b: number, c: number, d: number): number {\n    return (-c / 2) * (Math.cos((Math.PI * t) / d) - 1) + b;\n  }\n\n  easeInExpo(t: number, b: number, c: number, d: number): number {\n    return t === 0 ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n  }\n\n  easeOutExpo(t: number, b: number, c: number, d: number): number {\n    return t === d ? b + c : c * (-Math.pow(2, (-10 * t) / d) + 1) + b;\n  }\n\n  easeInOutExpo(t: number, b: number, c: number, d: number): number {\n    if (t === 0) {\n      return b;\n    }\n\n    if (t === d) {\n      return b + c;\n    }\n\n    // tslint:disable-next-line:no-conditional-assignment\n    if ((t /= d / 2) < 1) {\n      return (c / 2) * Math.pow(2, 10 * (t - 1)) + b;\n    }\n\n    return (c / 2) * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n\n  easeInCirc(t: number, b: number, c: number, d: number): number {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  }\n\n  easeOutCirc(t: number, b: number, c: number, d: number): number {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  }\n\n  easeInOutCirc(t: number, b: number, c: number, d: number): number {\n    // tslint:disable-next-line:no-conditional-assignment\n    if ((t /= d / 2) < 1) {\n      return (-c / 2) * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n\n    return (c / 2) * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n  }\n\n  easeInElastic(t: number, b: number, c: number, d: number): number {\n    const p = d * 0.3;\n    let s = 1.70158;\n    let a = c;\n\n    if (t === 0) {\n      return b;\n    }\n\n    // tslint:disable-next-line:no-conditional-assignment\n    if ((t /= d) === 1) {\n      return b + c;\n    }\n\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    } else {\n      s = (p / (2 * Math.PI)) * Math.asin(c / a);\n    }\n\n    return -(a * Math.pow(2, 10 * t--) * Math.sin(((t * d - s) * (2 * Math.PI)) / p)) + b;\n  }\n\n  easeOutElastic(t: number, b: number, c: number, d: number): number {\n    const p = d * 0.3;\n    let s = 1.70158;\n    let a = c;\n\n    if (t === 0) {\n      return b;\n    }\n\n    // tslint:disable-next-line:no-conditional-assignment\n    if ((t /= d) === 1) {\n      return b + c;\n    }\n\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    } else {\n      s = (p / (2 * Math.PI)) * Math.asin(c / a);\n    }\n\n    return a * Math.pow(2, -10 * t) * Math.sin(((t * d - s) * (2 * Math.PI)) / p) + c + b;\n  }\n\n  easeInOutElastic(t: number, b: number, c: number, d: number): number {\n    const p = d * (0.3 * 1.5);\n    let s = 1.70158;\n    let a = c;\n\n    if (t === 0) {\n      return b;\n    }\n\n    // tslint:disable-next-line:no-conditional-assignment\n    if ((t /= d / 2) === 2) {\n      return b + c;\n    }\n\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    } else {\n      s = (p / (2 * Math.PI)) * Math.asin(c / a);\n    }\n\n    if (t < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin(((t * d - s) * (2 * Math.PI)) / p)) + b;\n    }\n\n    return a * Math.pow(2, -10 * (t -= 1)) * Math.sin(((t * d - s) * (2 * Math.PI)) / p) * 0.5 + c + b;\n  }\n\n  easeInBack(t: number, b: number, c: number, d: number, s = 1.70158): number {\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  }\n\n  easeOutBack(t: number, b: number, c: number, d: number, s = 1.70158): number {\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  }\n\n  easeInOutBack(t: number, b: number, c: number, d: number, s = 1.70158): number {\n    // tslint:disable-next-line:no-conditional-assignment\n    if ((t /= d / 2) < 1) {\n      return (c / 2) * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n    }\n\n    return (c / 2) * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n  }\n\n  easeInBounce(t: number, b: number, c: number, d: number): number {\n    return c - this.easeOutBounce(d - t, 0, c, d) + b;\n  }\n\n  easeOutBounce(t: number, b: number, c: number, d: number): number {\n    // tslint:disable-next-line:no-conditional-assignment\n    if ((t /= d) < 1 / 2.75) {\n      return c * (7.5625 * t * t) + b;\n    } else if (t < 2 / 2.75) {\n      return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;\n    } else if (t < 2.5 / 2.75) {\n      return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;\n    }\n\n    return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;\n  }\n\n  easeInOutBounce(t: number, b: number, c: number, d: number): number {\n    if (t < d / 2) {\n      return this.easeInBounce(t * 2, 0, c, d) * 0.5 + b;\n    }\n\n    return this.easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  OnChanges,\n  NgZone,\n  EventEmitter,\n  ViewChild,\n  Inject,\n  ElementRef,\n  SimpleChanges,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\nimport {RoundProgressService} from './round-progress.service';\nimport {ROUND_PROGRESS_DEFAULTS, RoundProgressDefaults} from './round-progress.config';\nimport {RoundProgressEase} from './round-progress.ease';\n\n@Component({\n  selector: 'round-progress',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './round-progress.component.html',\n  styleUrls: ['./round-progress.component.css'],\n  host: {\n    role: 'progressbar',\n    '[attr.aria-valuemin]': '0',\n    '[attr.aria-valuemax]': 'max',\n    '[attr.aria-valuenow]': 'current',\n    '[style.width]': 'responsive ? \"\" : _getDiameter() + \"px\"',\n    '[style.height]': '_getElementHeight()',\n    '[style.padding-bottom]': '_getPaddingBottom()',\n    '[class.responsive]': 'responsive',\n  }\n})\nexport class RoundProgressComponent implements OnChanges {\n  /** Reference to the underlying `path` node. */\n  @ViewChild('path') path: ElementRef;\n\n  /** Current value of the progress bar. */\n  @Input() current: number;\n\n  /** Maximum value of the progress bar. */\n  @Input() max: number;\n\n  /** Radius of the circle. */\n  @Input() radius: number = this.defaults.radius;\n\n  /** Name of the easing function to use when animating. */\n  @Input() animation: string = this.defaults.animation;\n\n  /** Time in millisconds by which to delay the animation. */\n  @Input() animationDelay: number = this.defaults.animationDelay;\n\n  /** Duration of the animation. */\n  @Input() duration: number = this.defaults.duration;\n\n  /** Width of the circle's stroke. */\n  @Input() stroke: number = this.defaults.stroke;\n\n  /** Color of the circle. */\n  @Input() color: string = this.defaults.color;\n\n  /** Background color of the circle. */\n  @Input() background: string = this.defaults.background;\n\n  /** Whether the circle should take up the width of its parent. */\n  @Input() responsive: boolean = this.defaults.responsive;\n\n  /** Whether the circle is filling up clockwise. */\n  @Input() clockwise: boolean = this.defaults.clockwise;\n\n  /** Whether to render a semicircle. */\n  @Input() semicircle: boolean = this.defaults.semicircle;\n\n  /** Whether the tip of the progress should be rounded off. */\n  @Input() rounded: boolean = this.defaults.rounded;\n\n  /** Emits when a new value has been rendered. */\n  @Output() onRender: EventEmitter<number> = new EventEmitter();\n\n  private lastAnimationId = 0;\n\n  constructor(\n    private service: RoundProgressService,\n    private easing: RoundProgressEase,\n    @Inject(ROUND_PROGRESS_DEFAULTS) private defaults: RoundProgressDefaults,\n    private ngZone: NgZone\n  ) {}\n\n  /** Animates a change in the current value. */\n  private _animateChange(from: number, to: number): void {\n    if (typeof from !== 'number') {\n      from = 0;\n    }\n\n    to = this._clamp(to);\n    from = this._clamp(from);\n\n    const self = this;\n    const changeInValue = to - from;\n    const duration = self.duration;\n\n    // Avoid firing change detection for each of the animation frames.\n    self.ngZone.runOutsideAngular(() => {\n      const start = () => {\n        const startTime = self.service.getTimestamp();\n        const id = ++self.lastAnimationId;\n\n        requestAnimationFrame(function animation() {\n          const currentTime = Math.min(self.service.getTimestamp() - startTime, duration);\n          const value = self.easing[self.animation](currentTime, from, changeInValue, duration);\n\n          self._setPath(value);\n          self.onRender.emit(value);\n\n          if (id === self.lastAnimationId && currentTime < duration) {\n            requestAnimationFrame(animation);\n          }\n        });\n      };\n\n      if (this.animationDelay > 0) {\n        setTimeout(start, this.animationDelay);\n      } else {\n        start();\n      }\n    });\n  }\n\n  /** Sets the path dimensions. */\n  private _setPath(value: number): void {\n    if (this.path) {\n      const arc = this.service.getArc(value, this.max, this.radius - this.stroke / 2, this.radius, this.semicircle);\n      this.path.nativeElement.setAttribute('d', arc);\n    }\n  }\n\n  /** Clamps a value between the maximum and 0. */\n  private _clamp(value: number): number {\n    return Math.max(0, Math.min(value || 0, this.max));\n  }\n\n  /** Determines the SVG transforms for the <path> node. */\n  getPathTransform(): string {\n    const diameter = this._getDiameter();\n\n    if (this.semicircle) {\n      return this.clockwise\n        ? `translate(0, ${diameter}) rotate(-90)`\n        : `translate(${diameter + ',' + diameter}) rotate(90) scale(-1, 1)`;\n    } else if (!this.clockwise) {\n      return `scale(-1, 1) translate(-${diameter} 0)`;\n    }\n  }\n\n  /** Resolves a color through the service. */\n  resolveColor(color: string): string {\n    return this.service.resolveColor(color);\n  }\n\n  /** Change detection callback. */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.current) {\n      this._animateChange(changes.current.previousValue, changes.current.currentValue);\n    } else {\n      this._setPath(this.current);\n    }\n  }\n\n  /** Diameter of the circle. */\n  _getDiameter(): number {\n    return this.radius * 2;\n  }\n\n  /** The CSS height of the wrapper element. */\n  _getElementHeight(): string {\n    if (!this.responsive) {\n      return (this.semicircle ? this.radius : this._getDiameter()) + 'px';\n    }\n  }\n\n  /** Viewbox for the SVG element. */\n  _getViewBox(): string {\n    const diameter = this._getDiameter();\n    return `0 0 ${diameter} ${this.semicircle ? this.radius : diameter}`;\n  }\n\n  /** Bottom padding for the wrapper element. */\n  _getPaddingBottom(): string {\n    if (this.responsive) {\n      return this.semicircle ? '50%' : '100%';\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {RoundProgressComponent} from './round-progress.component';\nimport {ROUND_PROGRESS_DEFAULTS_PROVIDER} from './round-progress.config';\n\n@NgModule({\n  declarations: [RoundProgressComponent],\n  exports: [RoundProgressComponent],\n  providers: [ROUND_PROGRESS_DEFAULTS_PROVIDER],\n})\nexport class RoundProgressModule {}\n"]}