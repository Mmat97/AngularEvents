import * as ɵngcc0 from '@angular/core';
export declare class RoundProgressService {
    private base;
    private hasPerf;
    supportsSvg: boolean;
    constructor(document: any);
    /**
     * Resolves a SVG color against the page's `base` tag.
     */
    resolveColor(color: string): string;
    /**
     * Generates a timestamp.
     */
    getTimestamp(): number;
    /**
     * Generates the value for an SVG arc.
     * @param current       Current value.
     * @param total         Maximum value.
     * @param pathRadius    Radius of the SVG path.
     * @param elementRadius Radius of the SVG container.
     * @param isSemicircle  Whether the element should be a semicircle.
     */
    getArc(current: number, total: number, pathRadius: number, elementRadius: number, isSemicircle?: boolean): string;
    /**
     * Converts polar cooradinates to Cartesian.
     * @param elementRadius  Radius of the wrapper element.
     * @param pathRadius     Radius of the path being described.
     * @param angleInDegrees Degree to be converted.
     */
    private _polarToCartesian;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<RoundProgressService, [{ optional: true; }]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91bmQtcHJvZ3Jlc3Muc2VydmljZS5kLnRzIiwic291cmNlcyI6WyJyb3VuZC1wcm9ncmVzcy5zZXJ2aWNlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVjbGFyZSBjbGFzcyBSb3VuZFByb2dyZXNzU2VydmljZSB7XHJcbiAgICBwcml2YXRlIGJhc2U7XHJcbiAgICBwcml2YXRlIGhhc1BlcmY7XHJcbiAgICBzdXBwb3J0c1N2ZzogYm9vbGVhbjtcclxuICAgIGNvbnN0cnVjdG9yKGRvY3VtZW50OiBhbnkpO1xyXG4gICAgLyoqXHJcbiAgICAgKiBSZXNvbHZlcyBhIFNWRyBjb2xvciBhZ2FpbnN0IHRoZSBwYWdlJ3MgYGJhc2VgIHRhZy5cclxuICAgICAqL1xyXG4gICAgcmVzb2x2ZUNvbG9yKGNvbG9yOiBzdHJpbmcpOiBzdHJpbmc7XHJcbiAgICAvKipcclxuICAgICAqIEdlbmVyYXRlcyBhIHRpbWVzdGFtcC5cclxuICAgICAqL1xyXG4gICAgZ2V0VGltZXN0YW1wKCk6IG51bWJlcjtcclxuICAgIC8qKlxyXG4gICAgICogR2VuZXJhdGVzIHRoZSB2YWx1ZSBmb3IgYW4gU1ZHIGFyYy5cclxuICAgICAqIEBwYXJhbSBjdXJyZW50ICAgICAgIEN1cnJlbnQgdmFsdWUuXHJcbiAgICAgKiBAcGFyYW0gdG90YWwgICAgICAgICBNYXhpbXVtIHZhbHVlLlxyXG4gICAgICogQHBhcmFtIHBhdGhSYWRpdXMgICAgUmFkaXVzIG9mIHRoZSBTVkcgcGF0aC5cclxuICAgICAqIEBwYXJhbSBlbGVtZW50UmFkaXVzIFJhZGl1cyBvZiB0aGUgU1ZHIGNvbnRhaW5lci5cclxuICAgICAqIEBwYXJhbSBpc1NlbWljaXJjbGUgIFdoZXRoZXIgdGhlIGVsZW1lbnQgc2hvdWxkIGJlIGEgc2VtaWNpcmNsZS5cclxuICAgICAqL1xyXG4gICAgZ2V0QXJjKGN1cnJlbnQ6IG51bWJlciwgdG90YWw6IG51bWJlciwgcGF0aFJhZGl1czogbnVtYmVyLCBlbGVtZW50UmFkaXVzOiBudW1iZXIsIGlzU2VtaWNpcmNsZT86IGJvb2xlYW4pOiBzdHJpbmc7XHJcbiAgICAvKipcclxuICAgICAqIENvbnZlcnRzIHBvbGFyIGNvb3JhZGluYXRlcyB0byBDYXJ0ZXNpYW4uXHJcbiAgICAgKiBAcGFyYW0gZWxlbWVudFJhZGl1cyAgUmFkaXVzIG9mIHRoZSB3cmFwcGVyIGVsZW1lbnQuXHJcbiAgICAgKiBAcGFyYW0gcGF0aFJhZGl1cyAgICAgUmFkaXVzIG9mIHRoZSBwYXRoIGJlaW5nIGRlc2NyaWJlZC5cclxuICAgICAqIEBwYXJhbSBhbmdsZUluRGVncmVlcyBEZWdyZWUgdG8gYmUgY29udmVydGVkLlxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIF9wb2xhclRvQ2FydGVzaWFuO1xyXG59XHJcbiJdfQ==